package com.sphenon.basics.space.classes;

import com.sphenon.basics.space.*;

import com.sphenon.basics.space.tplinst.*;
import com.sphenon.basics.space.classes.*;
import com.sphenon.basics.space.exceptions.*;
import com.sphenon.basics.space.returncodes.*;
import com.sphenon.basics.space.retrievers.*;

import com.sphenon.basics.context.*;
import com.sphenon.basics.debug.*;
import com.sphenon.basics.context.classes.*;
import com.sphenon.basics.configuration.*;
import com.sphenon.basics.message.*;
import com.sphenon.basics.notification.*;
import com.sphenon.basics.customary.*;
import com.sphenon.basics.exception.*;
import com.sphenon.basics.many.*;
import com.sphenon.basics.many.tplinst.*;
import com.sphenon.basics.event.*;
import com.sphenon.basics.event.tplinst.*;
import com.sphenon.basics.metadata.*;
import com.sphenon.basics.metadata.Type;
import com.sphenon.basics.factory.returncodes.*;
import com.sphenon.basics.retriever.*;
import com.sphenon.basics.validation.*;
import com.sphenon.basics.validation.returncodes.*;
import com.sphenon.basics.validation.validators.*;
import com.sphenon.basics.variatives.*;
import com.sphenon.basics.variatives.tplinst.*;
// please include on a per project basis
// import com.sphenon.basics.aspects.*;
import com.sphenon.engines.aggregator.*;


// java
import java.util.List;
import java.io.PrintStream;

// Template: $Id$




import com.sphenon.ui.core.*;
import com.sphenon.ui.annotations.*;
import com.sphenon.basics.data.*;
import com.sphenon.basics.services.*;
import com.sphenon.basics.space.*;
import com.sphenon.basics.locating.*;

// java source generated by Mr.Source from UML (UXF)

public class Class_SpaceOnDemand
  extends Class_Space  implements Validatable, SpaceOnDemand
{
  static final public Class _class = Class_SpaceOnDemand.class;

  static protected long notification_level;
  static public    long adjustNotificationLevel(long new_level) { long old_level = notification_level; notification_level = new_level; return old_level; }
  static public    long getNotificationLevel() { return notification_level; }

  static protected long runtimestep_level;
  static public    long adjustRuntimeStepLevel(long new_level) { long old_level = runtimestep_level; runtimestep_level = new_level; return old_level; }
  static public    long getRuntimeStepLevel() { return runtimestep_level; }
  static { runtimestep_level = RuntimeStepLocationContext.getLevel(_class); };

  static {
      notification_level = NotificationLocationContext.getLevel(RootContext.getInitialisationContext(), _class);
      SpacePackageInitialiser.initialise(RootContext.getInitialisationContext());
  };

  public Class_SpaceOnDemand (CallContext call_context) {
    super(call_context);
    CallContext context = call_context;
  }
  
  protected boolean is_initialised_class_space_on_demand = false;

  public boolean getIsInitialisedClass_SpaceOnDemand(CallContext context) {
    return this.is_initialised_class_space_on_demand;
  }
  
  public boolean getIsInitialised(CallContext context) {
    return this.is_initialised_class_space_on_demand;
  }
  
  public void initialise(CallContext context) {
      initialiseClass_SpaceOnDemand (context);
  }

  public void initialiseClass_SpaceOnDemand (CallContext call_context) {
    if (!this.is_initialised_class_space_on_demand) {
      this.is_initialised_class_space_on_demand = true;
      CallContext context = call_context;

      {   if (this.super_space_source_vector_observer == null) {
              this.super_space_source_vector = null;
              this.super_space_source_vector = Factory_Vector_DataSource_long_.construct(context);
              // this.super_space_source_vector_observer = new VectorObserver_DataSource_long_(RootContext.getFallbackCallContext(), this.super_space_source_vector);
              this.do_setSuperSpaceSources(context, super_space_source_vector);

          }
      }
      {   if (this.sub_space_source_vector_observer == null) {
              this.sub_space_source_vector = null;
              this.sub_space_source_vector = Factory_Vector_DataSource_long_.construct(context);
              // this.sub_space_source_vector_observer = new VectorObserver_DataSource_long_(RootContext.getFallbackCallContext(), this.sub_space_source_vector);
              this.do_setSubSpaceSources(context, sub_space_source_vector);

          }
      }
      {   if (this.known_space_source_vector_observer == null) {
              this.known_space_source_vector = null;
              this.known_space_source_vector = Factory_Vector_DataSource_long_.construct(context);
              // this.known_space_source_vector_observer = new VectorObserver_DataSource_long_(RootContext.getFallbackCallContext(), this.known_space_source_vector);
              this.do_setKnownSpaceSources(context, known_space_source_vector);

          }
      }
      {   if (this.services_source_vector_observer == null) {
              this.services_source_vector = null;
              this.services_source_vector = Factory_Vector_DataSource_long_.construct(context);
              // this.services_source_vector_observer = new VectorObserver_DataSource_long_(RootContext.getFallbackCallContext(), this.services_source_vector);
              this.do_setServicesSources(context, services_source_vector);

          }
      }
      {   if (this.locators_source_vector_observer == null) {
              this.locators_source_vector = null;
              this.locators_source_vector = Factory_Vector_DataSource_long_.construct(context);
              // this.locators_source_vector_observer = new VectorObserver_DataSource_long_(RootContext.getFallbackCallContext(), this.locators_source_vector);
              this.do_setLocatorsSources(context, locators_source_vector);

          }
      }
    }
      initialiseClass_Space( call_context );
    }

  public void destroy (CallContext context) {
    if (!this.is_destroyed) {
      this.is_destroyed = true;
      this.destroyClass_SpaceOnDemand(context);
    }
  }

  public ValidationFailure canDestroy (CallContext context) {
    ValidationFailure vf = super.canDestroy(context);
    if (vf != null) { return vf; }
    return null;
  }

  protected void destroyClass_SpaceOnDemand (CallContext call_context) {
    CallContext context = call_context;
    super.destroyClass_Space(context);
  }
  
  public void finalize () throws Throwable {
    this.destroy(RootContext.getDestructionContext());
    super.finalize();
  }

    public void validateinstanceClass_SpaceOnDemand(CallContext call_context) throws ValidationFailure {
        CallContext context = call_context;
        ValidationFailure vf = validateinstanceClass_SpaceOnDemand(context, null);
        if (vf != null) { throw vf; }
    }
    
    public void validate(CallContext call_context) throws ValidationFailure {
        CallContext context = call_context;
        super.validate(context);
        validateinstanceClass_SpaceOnDemand(context);
    }

    protected ValidationFailure validateinstanceClass_SpaceOnDemand(CallContext call_context, ValidationFailure vf) {
      CallContext context = call_context;
        
        vf = super.validateinstanceClass_Space(context, vf);
        try {
            validateSuperSpaceSources(context);
        } catch (ValidationFailure vf2) {
            if (vf == null) {
                vf = ValidationFailure.createValidationFailure(context, ValidationStringPool.get(context, "0.0.0/* Some values are invalid */" ));
            }
            vf.addCause(context, vf2);
        }
        try {
            validateSubSpaceSources(context);
        } catch (ValidationFailure vf2) {
            if (vf == null) {
                vf = ValidationFailure.createValidationFailure(context, ValidationStringPool.get(context, "0.0.0/* Some values are invalid */" ));
            }
            vf.addCause(context, vf2);
        }
        try {
            validateKnownSpaceSources(context);
        } catch (ValidationFailure vf2) {
            if (vf == null) {
                vf = ValidationFailure.createValidationFailure(context, ValidationStringPool.get(context, "0.0.0/* Some values are invalid */" ));
            }
            vf.addCause(context, vf2);
        }
        try {
            validateServicesSources(context);
        } catch (ValidationFailure vf2) {
            if (vf == null) {
                vf = ValidationFailure.createValidationFailure(context, ValidationStringPool.get(context, "0.0.0/* Some values are invalid */" ));
            }
            vf.addCause(context, vf2);
        }
        try {
            validateLocatorsSources(context);
        } catch (ValidationFailure vf2) {
            if (vf == null) {
                vf = ValidationFailure.createValidationFailure(context, ValidationStringPool.get(context, "0.0.0/* Some values are invalid */" ));
            }
            vf.addCause(context, vf2);
        }
        return vf;
    }

  protected VectorObserver_DataSource_long_ super_space_source_vector_observer;
  protected Vector_DataSource_long_ super_space_source_vector;
  public Vector_DataSource_long_ getSuperSpaceSources(CallContext call_context) // uml association
  { CallContext context = call_context;
    
    
    
  Vector_DataSource_long_ result = null;
    result = (this.super_space_source_vector_observer == null || this.super_space_source_vector_observer.getObserved(context) == null ? null : this.super_space_source_vector_observer);
    return result;
  }
  public void setSuperSpaceSources(CallContext call_context, Vector_DataSource_long_ super_space_source_vector) {
     CallContext context = call_context;
     do_setSuperSpaceSources(context,  super_space_source_vector);
  }

  final protected void do_setSuperSpaceSources(CallContext call_context, Vector_DataSource_long_ super_space_source_vector) // uml association
  {CallContext context = call_context;
    
    
    
     if (super_space_source_vector == null) {
        this.super_space_source_vector_observer = null;
     } else {
        if (this.super_space_source_vector_observer == null) {
           this.super_space_source_vector_observer = new VectorObserver_DataSource_long_(context, super_space_source_vector);
       } else {
           this.super_space_source_vector_observer.setObserved(context, super_space_source_vector);
       }
    }
    this.super_space_source_vector = super_space_source_vector;
    
    
    
  }
  public void validateSuperSpaceSources(CallContext call_context) throws ValidationFailure {
   
    CallContext context = call_context;
    ValidationFailure vf = null;
    if (vf != null) { throw vf; }
  }
  protected VectorObserver_DataSource_long_ sub_space_source_vector_observer;
  protected Vector_DataSource_long_ sub_space_source_vector;
  public Vector_DataSource_long_ getSubSpaceSources(CallContext call_context) // uml association
  { CallContext context = call_context;
    
    
    
  Vector_DataSource_long_ result = null;
    result = (this.sub_space_source_vector_observer == null || this.sub_space_source_vector_observer.getObserved(context) == null ? null : this.sub_space_source_vector_observer);
    return result;
  }
  public void setSubSpaceSources(CallContext call_context, Vector_DataSource_long_ sub_space_source_vector) {
     CallContext context = call_context;
     do_setSubSpaceSources(context,  sub_space_source_vector);
  }

  final protected void do_setSubSpaceSources(CallContext call_context, Vector_DataSource_long_ sub_space_source_vector) // uml association
  {CallContext context = call_context;
    
    
    
     if (sub_space_source_vector == null) {
        this.sub_space_source_vector_observer = null;
     } else {
        if (this.sub_space_source_vector_observer == null) {
           this.sub_space_source_vector_observer = new VectorObserver_DataSource_long_(context, sub_space_source_vector);
       } else {
           this.sub_space_source_vector_observer.setObserved(context, sub_space_source_vector);
       }
    }
    this.sub_space_source_vector = sub_space_source_vector;
    
    
    
  }
  public void validateSubSpaceSources(CallContext call_context) throws ValidationFailure {
   
    CallContext context = call_context;
    ValidationFailure vf = null;
    if (vf != null) { throw vf; }
  }
  protected VectorObserver_DataSource_long_ known_space_source_vector_observer;
  protected Vector_DataSource_long_ known_space_source_vector;
  public Vector_DataSource_long_ getKnownSpaceSources(CallContext call_context) // uml association
  { CallContext context = call_context;
    
    
    
  Vector_DataSource_long_ result = null;
    result = (this.known_space_source_vector_observer == null || this.known_space_source_vector_observer.getObserved(context) == null ? null : this.known_space_source_vector_observer);
    return result;
  }
  public void setKnownSpaceSources(CallContext call_context, Vector_DataSource_long_ known_space_source_vector) {
     CallContext context = call_context;
     do_setKnownSpaceSources(context,  known_space_source_vector);
  }

  final protected void do_setKnownSpaceSources(CallContext call_context, Vector_DataSource_long_ known_space_source_vector) // uml association
  {CallContext context = call_context;
    
    
    
     if (known_space_source_vector == null) {
        this.known_space_source_vector_observer = null;
     } else {
        if (this.known_space_source_vector_observer == null) {
           this.known_space_source_vector_observer = new VectorObserver_DataSource_long_(context, known_space_source_vector);
       } else {
           this.known_space_source_vector_observer.setObserved(context, known_space_source_vector);
       }
    }
    this.known_space_source_vector = known_space_source_vector;
    
    
    
  }
  public void validateKnownSpaceSources(CallContext call_context) throws ValidationFailure {
   
    CallContext context = call_context;
    ValidationFailure vf = null;
    if (vf != null) { throw vf; }
  }
  protected VectorObserver_DataSource_long_ services_source_vector_observer;
  protected Vector_DataSource_long_ services_source_vector;
  public Vector_DataSource_long_ getServicesSources(CallContext call_context) // uml association
  { CallContext context = call_context;
    
    
    
  Vector_DataSource_long_ result = null;
    result = (this.services_source_vector_observer == null || this.services_source_vector_observer.getObserved(context) == null ? null : this.services_source_vector_observer);
    return result;
  }
  public void setServicesSources(CallContext call_context, Vector_DataSource_long_ services_source_vector) {
     CallContext context = call_context;
     do_setServicesSources(context,  services_source_vector);
  }

  final protected void do_setServicesSources(CallContext call_context, Vector_DataSource_long_ services_source_vector) // uml association
  {CallContext context = call_context;
    
    
    
     if (services_source_vector == null) {
        this.services_source_vector_observer = null;
     } else {
        if (this.services_source_vector_observer == null) {
           this.services_source_vector_observer = new VectorObserver_DataSource_long_(context, services_source_vector);
       } else {
           this.services_source_vector_observer.setObserved(context, services_source_vector);
       }
    }
    this.services_source_vector = services_source_vector;
    
    
    
  }
  public void validateServicesSources(CallContext call_context) throws ValidationFailure {
   
    CallContext context = call_context;
    ValidationFailure vf = null;
    if (vf != null) { throw vf; }
  }
  protected VectorObserver_DataSource_long_ locators_source_vector_observer;
  protected Vector_DataSource_long_ locators_source_vector;
  public Vector_DataSource_long_ getLocatorsSources(CallContext call_context) // uml association
  { CallContext context = call_context;
    
    
    
  Vector_DataSource_long_ result = null;
    result = (this.locators_source_vector_observer == null || this.locators_source_vector_observer.getObserved(context) == null ? null : this.locators_source_vector_observer);
    return result;
  }
  public void setLocatorsSources(CallContext call_context, Vector_DataSource_long_ locators_source_vector) {
     CallContext context = call_context;
     do_setLocatorsSources(context,  locators_source_vector);
  }

  final protected void do_setLocatorsSources(CallContext call_context, Vector_DataSource_long_ locators_source_vector) // uml association
  {CallContext context = call_context;
    
    
    
     if (locators_source_vector == null) {
        this.locators_source_vector_observer = null;
     } else {
        if (this.locators_source_vector_observer == null) {
           this.locators_source_vector_observer = new VectorObserver_DataSource_long_(context, locators_source_vector);
       } else {
           this.locators_source_vector_observer.setObserved(context, locators_source_vector);
       }
    }
    this.locators_source_vector = locators_source_vector;
    
    
    
  }
  public void validateLocatorsSources(CallContext call_context) throws ValidationFailure {
   
    CallContext context = call_context;
    ValidationFailure vf = null;
    if (vf != null) { throw vf; }
  }
  protected volatile boolean sub_space_sources_prepared;
  public Vector_Space_long_ getSubSpaces(CallContext context) {
      Vector_Space_long_ subspaces = super.getSubSpaces(context);
      if (this.sub_space_sources_prepared == false) {
          synchronized(this) {
              if (this.sub_space_sources_prepared == false) {
                  this.sub_space_sources_prepared = true;
                  if (this.getSubSpaceSources(context) != null) {
                      for (DataSource subspacesource : this.getSubSpaceSources(context).getIterable_DataSource_(context)) {
                          Space subspace = (Space) subspacesource.getObject(context);
                          if (subspace != null) {
                              subspaces.append(context, subspace);
                          }
                      }
                  }
              }
          }
      }
      return subspaces;
  }
  protected volatile boolean super_space_sources_prepared;
  public Vector_Space_long_ getSuperSpaces(CallContext context) {
      Vector_Space_long_ superspaces = super.getSuperSpaces(context);
      if (this.super_space_sources_prepared == false) {
          synchronized(this) {
              if (this.super_space_sources_prepared == false) {
                  this.super_space_sources_prepared = true;
                  if (this.getSuperSpaceSources(context) != null) {
                      for (DataSource superspacesource : this.getSuperSpaceSources(context).getIterable_DataSource_(context)) {
                          Space superspace = (Space) superspacesource.getObject(context);
                          if (superspace != null) {
                              superspaces.append(context, superspace);
                          }
                      }
                  }
              }
          }
      }
      return superspaces;
  }
  protected volatile boolean known_space_sources_prepared;
  public Vector_Space_long_ getKnownSpaces(CallContext context) {
      Vector_Space_long_ knownspaces = super.getKnownSpaces(context);
      if (this.known_space_sources_prepared == false) {
          synchronized(this) {
              if (this.known_space_sources_prepared == false) {
                  this.known_space_sources_prepared = true;
                  if (this.getKnownSpaceSources(context) != null) {
                      for (DataSource knownspacesource : this.getKnownSpaceSources(context).getIterable_DataSource_(context)) {
                          Space knownspace = (Space) knownspacesource.getObject(context);
                          if (knownspace != null) {
                              knownspaces.append(context, knownspace);
                          }
                      }
                  }
              }
          }
      }
      return knownspaces;
  }
  protected volatile boolean services_sources_prepared;
  public Vector_Service_long_ getServices(CallContext context) {
      Vector_Service_long_ services = super.getServices(context);
      if (services_sources_prepared == false) {
          synchronized(this) {
              if (this.services_sources_prepared == false) {
                  this.services_sources_prepared = true;
                  if (this.getServicesSources(context) != null) {
                      for (DataSource servicessource: this.getServicesSources(context).getIterable_DataSource_(context)) {
                          Vector_Service_long_ sub_services = (Vector_Service_long_) servicessource.getObject(context);
                          for (Service service: sub_services.getIterable(context)) {
                              if (service != null) {
                                  services.append(context, service);
                              }
                          }
                      }
                  }
              }
          }
      }
      return services;
  }
  protected volatile boolean locators_sources_prepared;
  public Vector_NamedLocator_long_ getLocators(CallContext context) {
      Vector_NamedLocator_long_ locators = super.getLocators(context);
      if (locators_sources_prepared == false) {
          synchronized(this) {
              if (this.locators_sources_prepared == false) {
                  this.locators_sources_prepared = true;
                  if (this.getLocatorsSources(context) != null) {
                      for (DataSource locatorssource: this.getLocatorsSources(context).getIterable_DataSource_(context)) {
                          Vector_NamedLocator_long_ sub_locators = (Vector_NamedLocator_long_) locatorssource.getObject(context);
                          for (NamedLocator locator: sub_locators.getIterable(context)) {
                              if (locator != null) {
                                  locators.append(context, locator);
                              }
                          }
                      }
                  }
              }
          }
      }
      return locators;
  }
  

    
    
    
    
    
  

}

