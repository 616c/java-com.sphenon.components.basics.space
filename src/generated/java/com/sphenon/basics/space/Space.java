package com.sphenon.basics.space;

import com.sphenon.basics.space.tplinst.*;
import com.sphenon.basics.space.exceptions.*;
import com.sphenon.basics.space.returncodes.*;

import com.sphenon.basics.context.*;
import com.sphenon.basics.notification.*;
import com.sphenon.basics.customary.*;
import com.sphenon.basics.exception.*;
import com.sphenon.basics.many.*;
import com.sphenon.basics.many.tplinst.*;
import com.sphenon.basics.event.*;
import com.sphenon.basics.event.tplinst.*;
import com.sphenon.basics.metadata.*;
import com.sphenon.basics.metadata.Type;
import com.sphenon.basics.factory.returncodes.*;
import com.sphenon.basics.validation.returncodes.*;
import com.sphenon.basics.validation.*;
import com.sphenon.basics.variatives.*;
import com.sphenon.basics.variatives.tplinst.*;

import com.sphenon.ui.annotations.*;




import com.sphenon.ui.core.*;
import com.sphenon.ui.annotations.*;
import com.sphenon.basics.data.*;
import com.sphenon.basics.services.*;
import com.sphenon.basics.space.*;
import com.sphenon.basics.locating.*;

// java source generated by Mr.Source from UML (UXF)

// Generated by interface.java.tpl

@UIId         ("js:instance.getId(context)")
@UIName       ("js:instance.getName(context)")
@UIClassifier ("Space")
@UIParts      ( { "js:instance.getSubSpaces(context).getIterable(context)",
                  "js:instance.getKnownSpaces(context).getIterable(context)",
                  "js:instance.getContents(context).getIterable(context)"
                } )
 public interface Space
  extends Validatable
 {
  
  
  public String getId(CallContext call_context); // uml interface attribute
  
  
  public String getName(CallContext call_context); // uml interface attribute
  
  public Vector_Space_long_ getSuperSpaces(CallContext call_context); // uml association
  
  public Vector_Space_long_ getSubSpaces(CallContext call_context); // uml association
  
  public Vector_Space_long_ getKnownSpaces(CallContext call_context); // uml association
  
  public Vector_Service_long_ getServices(CallContext call_context); // uml association
  
  public Vector_NamedLocator_long_ getLocators(CallContext call_context); // uml association
  
  public Vector_Object_long_ getContents(CallContext call_context); // uml association
  
  public Space tryGetSubSpaceById (CallContext call_context, String id); // uml interface operation
  
  public Space tryGetSuperSpaceById (CallContext call_context, String id); // uml interface operation
  
  public Space tryGetKnownSpaceById (CallContext call_context, String id); // uml interface operation
  
  public<ServiceClass> ServiceClass tryGetServiceByClass (CallContext call_context, Class<ServiceClass> service_class); // uml interface operation
  
  public Locator tryGetLocatorByName (CallContext call_context, String name); // uml interface operation
  
  public Locator tryGetLocatorByClass (CallContext call_context, String class_id); // uml interface operation
  
  public void validate(CallContext call_context) throws ValidationFailure;
  

  

    
    
    
    
    
    
    
    
  

}


